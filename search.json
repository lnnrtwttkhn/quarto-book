[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The Quarto Book",
    "section": "",
    "text": "A Guide to Quarto\n\n\n\n\n\nPreface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\n1 + 1",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "contents.html",
    "href": "contents.html",
    "title": "Contents",
    "section": "",
    "text": "The estimate of the reading time for each chapter is computed by counting the words in the chapter and assuming a reading speed of 200 words per minute.\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Modified - Oldest\n        \n         \n          Modified - Newest\n        \n         \n          Reading Time (Low to High)\n        \n         \n          Reading Time (High to Low)\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nApproach\n\n\n\n\n\nQuarto helps, but how?\n\n\n\n\n\n2 min\n\n\nNovember 26, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nQuarto intro\n\n\n\n\n\n\nbeginner\n\n\nbasics\n\n\n\nThis chapter is an introduction to Quarto\n\n\n\n\n\n5 min\n\n\nNovember 26, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nInstallation\n\n\n\n\n\nThis chapter helps you with installation process.\n\n\n\n\n\n2 min\n\n\nNovember 26, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\n\n\n\n\n\n\n\n\n\n\n\n2 min\n\n\nNovember 26, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTexts, Images, and Tables\n\n\n\n\n\n\n\n\n\n\n\n11 min\n\n\nNovember 26, 2024\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Contents"
    ]
  },
  {
    "objectID": "chapters/approach.html",
    "href": "chapters/approach.html",
    "title": "1  Approach",
    "section": "",
    "text": "1.1 What is this book about?\nIn short, the book focuses on the necessary elements of FAIR values, namely, Findable, Accessible, Interoperable, and Reusable materials, using Quarto. This book aims familiarize the reader with Quarto, a powerful tool for crafting educational FAIR contents with hands-on examples. Our guide is not a replacement for the Quarto documentation. We don’t want to teach Quarto from A to Z, rather, we aim to orient Quarto’s capabilities towards creating teaching materials and reproducible research.\nQuarto has several features that make it a perfect fit as the cornerstone for making FAIR materials. It can be easily synchronized with different platforms like Git, which is a huge advantage compared to other word processor programs like Microsoft Word.\nThis shareability feature is the first and arguably the most important step in creating FAIR content, that opens numerous opportunities for the scientific community, such as contributing to others’ works or computational examination of their research. The main focus of the guide is on the necessary elements of FAIR materials, concretely, for crafting educational content.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Approach</span>"
    ]
  },
  {
    "objectID": "chapters/approach.html#how-to-use-this-guide",
    "href": "chapters/approach.html#how-to-use-this-guide",
    "title": "1  Approach",
    "section": "1.2 How to use this guide?",
    "text": "1.2 How to use this guide?\nQuarto is the intersection of various tools. It is a text editor, a slide crafting tool, a website builder, and a code compiler all at once. We recommend integrating the use of Quarto with your existing material development process. For example, if you are in the middle of developing materials for your lectures, use Quarto alongside your current method of developing these materials for a small portion of the content. This approach helps you get to know Quarto better and adapt its abilities to your purpose.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Approach</span>"
    ]
  },
  {
    "objectID": "chapters/approach.html#how-can-i-contribute-to-this-book",
    "href": "chapters/approach.html#how-can-i-contribute-to-this-book",
    "title": "1  Approach",
    "section": "1.3 How can I contribute to this book?",
    "text": "1.3 How can I contribute to this book?\nThis book is constantly evolving and meant as a living resource, and your input can make it even better! If you spot typos, have suggestions for improvement, or want to contribute new content, we welcome your involvement! If you find a typo, an unclear explanation, have an idea for a new chapter or want to see a specific topic covered you are more than welcome to open an issue or submit a pull request in the GitHub repository of this book.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Approach</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html",
    "href": "chapters/intro.html",
    "title": "2  Quarto intro",
    "section": "",
    "text": "2.1 What is Quarto?\nQuarto is an open-source, multi-language, publishing system created by Posit (formerly known as RStudio). It is designed to enable the creation of dynamic documents, including reports, presentations, websites, books, and more. Quarto builds upon the foundation of RMarkdown, extending its capabilities to support multiple programming languages and various output formats. Quarto integrates code, text, and media into a single document that can be rendered into various formats. It supports languages like R, Python, Julia, and JavaScript, making it ideal for scientific writing, data analysis, and technical documentation. This chapter introduces the basics of Quarto, its features, and how to get started using it for your projects.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Quarto intro</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#what-is-quarto",
    "href": "chapters/intro.html#what-is-quarto",
    "title": "2  Quarto intro",
    "section": "",
    "text": "2.1.1 Key Features\n\nMulti-language support: Quarto allows the integration of code from different programming languages in a single document.\nOutput formats: Quarto can generate HTML, PDF, Word documents, presentations (using reveal.js or PowerPoint), and even websites.\nIntegration with RStudio: Quarto is deeply integrated with RStudio, making it easy to create and render documents within this IDE.\n\n\n\n2.1.2 Common Use Cases\n\nArticles and Reports: Quarto is widely used for creating dynamic articles and reports that can include code, figures, and references.\nWebsites: You can use Quarto to build entire websites, integrating multiple pages and even blogs.\nPresentations: Quarto allows you to create interactive presentations with support for multimedia content.\nBooks: You can use Quarto to write and publish online books, with support for multiple chapters, references, and more.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Quarto intro</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#getting-started-with-quarto",
    "href": "chapters/intro.html#getting-started-with-quarto",
    "title": "2  Quarto intro",
    "section": "2.2 Getting started with Quarto",
    "text": "2.2 Getting started with Quarto\nTo begin using Quarto, you need to have an appropriate text editor installed. Quarto supports various editors, including RStudio, Jupyter, Neovim, Visual Studio Code (VS Code), and even plain text editors like e.g. Vim.\n\n2.2.1 Using Quarto from RStudio\n\nInstall RStudio: Download and install the latest version of RStudio from the Posit website.\nCreate a Quarto file: Open RStudio and navigate to “File” &gt; “New file” &gt; “Quarto Document” to create a new .qmd file.\n\n\n\n2.2.2 Rendering Quarto Documents\nQuarto documents can be rendered into different formats using either the command line or the RStudio GUI.\n\nPreview You can preview your Quarto document in a web browser that updates live as you make changes using:\n\nquarto preview\nThis command opens a live preview of your document in a web browser. The preview automatically updates each time you save the document. If you open your quarto file in Rstudio there is also a render button at the top of the GUI.\n\nRender: To render your document without previewing, use:\n\nquarto render\nThis command generates the final output based on the specified format in the YAML header (e.g., HTML, PDF).\nWhere to run these commands: Open your terminal or command prompt and navigate to the directory where your Quarto file (e.g., your-document.qmd) is located.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Quarto intro</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#markdown-basics",
    "href": "chapters/intro.html#markdown-basics",
    "title": "2  Quarto intro",
    "section": "2.3 Markdown Basics",
    "text": "2.3 Markdown Basics\nQuarto uses Markdown, a lightweight markup language, for formatting text. Markdown is easy to learn and widely used in various platforms, including GitHub, Slack, and RStudio.\n\n2.3.1 Text Formatting\nMarkdown allows you to easily format text. Here are some common formatting options:\n\nBold: **bold text**\nItalic: *italicized text*\nCode: `code`\nBlockquote: &gt; blockquote\n\n\n\n2.3.2 Lists\nMarkdown supports both ordered and unordered lists:\n\nUnordered list:\n- Item 1\n- Item 2\n- Item 3\nOrdered list:\n1. First item\n2. Second item\n3. Third item\n\n\n\n2.3.3 Tables\nYou can create tables in Markdown using the following syntax:\n| Header 1 | Header 2 |\n|----------|----------|\n| Cell 1   | Cell 2   |\n| Cell 3   | Cell 4   |\n\n\n2.3.4 Equations\nQuarto supports LaTeX syntax for rendering mathematical equations:\n\nInline math: $E = mc^{2}$\nDisplay math:\n$$E = mc^{2}$$\n\n\n\n2.3.5 Links and Images\nYou can easily add links and images in Markdown:\n\nLink: [Link Text](http://example.com)\nImage: ![Alt Text](http://example.com/image.jpg)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Quarto intro</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#useful-features",
    "href": "chapters/intro.html#useful-features",
    "title": "2  Quarto intro",
    "section": "2.4 Useful features",
    "text": "2.4 Useful features\n\n2.4.1 YAML Header\nThe YAML header at the beginning of a Quarto document contains metadata that controls how the document is rendered. This includes the title, author, date, and output format.\n\n\n2.4.2 Example YAML Header\n---\ntitle: \"Document Title\"\nauthor: \"Your Name\"\nformat: html\ntheme: default\n---\n\n\n2.4.3 Code Chunks\nOne of the key features of Quarto is the ability to include executable code chunks within your document. These chunks can be written in various programming languages and are executed during rendering.\n\n2.4.3.1 Example Code Chunk:\n\n\n\nCode\n\n# Example Code Chunk\n# This is an R code chunk that generates a scatter plot\nx &lt;- c(1, 2, 3, 4, 5)\ny &lt;- c(2, 4, 1, 3, 5)\nplot(x, y, main = \"Scatter Plot Example\", xlab = \"X-Axis\", ylab = \"Y-Axis\")\n\n\nThis code will be executed when the document is rendered, and the output (a scatter plot) will be included in the final document.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Quarto intro</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#git-integration",
    "href": "chapters/intro.html#git-integration",
    "title": "2  Quarto intro",
    "section": "2.5 Git Integration",
    "text": "2.5 Git Integration\nQuarto documents (.qmd files) are plain text, making them ideal for version control using Git. You can take advantage of Git’s branching and merging capabilities to manage complex document edits and resolve conflicts efficiently. Check out our Version Control Book for more information about hwo to use Git.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Quarto intro</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#conclusion",
    "href": "chapters/intro.html#conclusion",
    "title": "2  Quarto intro",
    "section": "2.6 Conclusion",
    "text": "2.6 Conclusion\nQuarto is a powerful tool that brings together the best features of Markdown, RMarkdown, and modern programming environments to create dynamic, reproducible documents. Whether you’re writing a research paper, building a website, or preparing a presentation, Quarto provides the tools you need to streamline your workflow and enhance your output. By mastering the basics covered in this chapter, you’ll be well on your way to using Quarto effectively in your own projects.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Quarto intro</span>"
    ]
  },
  {
    "objectID": "chapters/installation.html",
    "href": "chapters/installation.html",
    "title": "3  Installation",
    "section": "",
    "text": "3.1 Download Quarto\nQuarto is free to use and available for download on Quarto’s website. The very first step is to download Quarto. On the homepage, there is a button labeled as Get Started. Click on it and navigate to the new page in which there are download links. Download Quarto based on your operating system. It is compatible with  Mac,  Windows,  Ubuntu and  Linux.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "chapters/installation.html#download-quarto",
    "href": "chapters/installation.html#download-quarto",
    "title": "3  Installation",
    "section": "",
    "text": "Quarto’s Website\n\n\n\n\n\nQuarto Download Page",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "chapters/installation.html#install-quarto",
    "href": "chapters/installation.html#install-quarto",
    "title": "3  Installation",
    "section": "3.2 Install Quarto",
    "text": "3.2 Install Quarto\nGo to the directory in which Quarto is downloaded and double-click on it to start the installation process. During the installation process, you’ll be presented with various options and settings. We recommend to leave all settings to their standard configuration, unless you have a specific need to e.g. change the installation destination.\n\n Windows MacOS Linux\n\n\n\n\n\nWindows Installer\n\n\n\n\n\n\n\n\n\n\n\n\n Windows MacOS Linux\n\n\n\n\n\nWindows Installer\n\n\n\n\n\n\n\n\n\n\n\nOnce you have finished selecting your preference, click the install button to begin the installation process.\n\n Windows MacOS Linux\n\n\n\n\n\nWindows Installer\n\n\n\n\n\n\n\n\n\n\n\nThe installer will copy the necessary files and set up Quarto on your system. Once the installation is complete, you’ll see a “Finish” button and a text that tells you to “restart any existing Command Prompts, Powershell windows, and Visual Studio Code instances prior to using Quarto”.\n\n Windows MacOS Linux\n\n\n\n\n\nWindows Installer",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "chapters/setup.html",
    "href": "chapters/setup.html",
    "title": "4  Getting Started",
    "section": "",
    "text": "4.1 Your first project with Quarto\nOn the same page that you downloaded the Quarto installer, you can find different tools to get started with. RStudio is our preferred tool because of its capabilities and well-structured integration with Quarto and other tools such as Git. Feel free to use other tools like VS Code, Jupyter, Neovim or even a simple Text Editor if you want.\nTo open a Quarto document in RStudio follow the steps below:\nFrom now on you can add text, images, code, tables to your document, whether in Visual or Source environment.\nYou can render your document to see how the changes you have made actually look like. To render, click on the Render button . It is also possible to Render on Save  by checking the empty box! .\nThis is how our document looks like after rendering:\nHere you can write whatever you want! And even format it in bold, italic, as a link.\nDo you want to show code? No problem!\nCode\n\n# This is an executable code chunk in R language.\na &lt;- 1\nb &lt;- 2\nc &lt;- a + b\nprint(c)\nQuarto offers many more features as well, which we’ll learn together in the course of this documentation.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "chapters/setup.html#your-first-project-with-quarto",
    "href": "chapters/setup.html#your-first-project-with-quarto",
    "title": "4  Getting Started",
    "section": "",
    "text": "Open RStudio. If you don’t have RStudio installed download it here. You can find the RStudio’s installation guide here as well.\nOn the toolbar click on new document icon. Then you will see several options.\nTo open a Quarto document click on Quarto document… icon.\n\n\n\nCongratulations! You have opened your first .qmd file. It should look like this: an image of an empty qmd document. \n\n\n\n\n\nQuarto Document in Visual Mode\n\n\n\n\n\nQuarto Document in Source Mode\n\n\n\n\n\n\nIncremental list\nIncremental list\nIncremental list\nIncremental list",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "chapters/setup.html#yaml-header",
    "href": "chapters/setup.html#yaml-header",
    "title": "4  Getting Started",
    "section": "4.2 YAML Header",
    "text": "4.2 YAML Header\nIn Quarto you can set attributes to the document you are working on. YAML header is where one writes these attributes and is defined by --- in the beginning of the document. By default, Quarto sets up a YAML header for every .qmd file. We can modify that, for example by adding a subtitle, or the author.\n---\ntitle: \"Quarto Document\"\nsubtitle: \"Hello Quarto!\"\neditor: visual\nauthor: \"Name of the author\"\n---\nTo find the full list of YAML attributes refer to the Quarto documentation, here.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Getting Started</span>"
    ]
  },
  {
    "objectID": "chapters/texts-images-tables.html",
    "href": "chapters/texts-images-tables.html",
    "title": "5  Texts, Images, and Tables",
    "section": "",
    "text": "5.0.1 Text Formatting\nFirst and foremost, Quarto is a publishing system. Therefore, it has the flexibility to format text in various ways. It is possible to write in visual or source modes. In visual editor no syntax is involved to change the style of text, as opposed to, source. Below you can see the tables that introduce the syntax related to a specific style such as bold, italic, etc.\n\n5.0.1.1 Bold, Italic, and more…\n\n\n\n\n\n\n\nSyntax\nOutput\n\n\n\n\n*Pizza* **never** texts ***back***.\nPizza never texts back.\n\n\nE=mc^2^ — my ex~2~cuse for eating dessert ~~twice~~ three times!\nE=mc2 — my ex2cuse for eating dessert twice three times!\n\n\n`verbatim code`\nverbatim code\n\n\n\n\n\n\n5.0.2 Headings\n\n\n\n\n\n\n\nMarkdown\nOutput\n\n\n\n\n# Header 1\n6 Header 1\n\n\n## Header 2\n6.1 Header 2\n\n\n### Header 3\n6.1.1 Header 3\n\n\n#### Header 4\n6.1.1.1 Header 4\n\n\n##### Header 5\nHeader 5\n\n\n###### Header 6\nHeader 6\n\n\n\n\n\n6.1.2 Links\nLinks can be added to a Quarto document by simply using https://quarto.org.\n&lt;https://quarto.org&gt;\nTo link a word, the following syntax is used:\n[Quarto Website](https://quarto.org)\nQuarto Website\n\n\n6.1.3 Tables\nTo draw a table in Quarto, you should draw a table! Let’s find out with an example:\n| Fruits | Animals|  Trees |\n|:------:|:-------|-------:|\n| Orange |  Tiger |Sequoia |\n| Apple  |Dolphin | Cedar  |\n| Banana |  Wolf  | Pine   |\n\n\n\nFruits\nAnimals\nTrees\n\n\n\n\nOrange\nTiger\nSequoia\n\n\nApple\nDolphin\nCedar\n\n\nBanana\nWolf\nPine\n\n\n\nAs you see, adding : to the left, right or both sides of the dashes will affect the alignment of a column. For further customization options regarding tables see Quarto’s documentation on tables.\n\n\n6.1.4 Images\nIn the simplest form, images can be added to a Quarto document by using:\n![Description](image address)\n\n\n\nPhoto by Michael Baccin on Unsplash\n\n\nImages can also be turned into links. It is basically combining the syntax of an image and a link together:\n[![Description](image address)](Link)\n\n\n\nPhoto by Kiarash Mansouri on Unsplash\n\n\nFor better accessibility, it is possible and recommended to add alt text to the images.\n[![Description](image address){fig-alt=\"Alt text\"}](Link)\n\n\n\nPhoto by Anita Austvika on Unsplash",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Texts, Images, and Tables</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "6  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "acknowledgements.html",
    "href": "acknowledgements.html",
    "title": "Acknowledgements",
    "section": "",
    "text": "Funding\nThis project is funded by the “Claussen-Simon-Fund for Science & Higher Education 2024” by the Claussen-Simon-Foundation, in Hamburg, Germany.\nThe project is also partly supported by the Digital and Data Literacy in Teaching Lab (DDLitLab), an initiative by the Center for Interdisciplinary Study Programs (Zentrum für Interdisziplinäre Studienangebote; ISA-Zentrum) at the University of Hamburg, Germany. The Digital and Data Literacy in Teaching Lab program is in turn funded by the Stiftung Innovation in der Hochschullehre (details about the funding program can be found here).",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "acknowledgements.html#code",
    "href": "acknowledgements.html#code",
    "title": "Acknowledgements",
    "section": "Code",
    "text": "Code\nThis website is made with Quarto. The source code of this website can be found on GitHub.",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "acknowledgements.html#images",
    "href": "acknowledgements.html#images",
    "title": "Acknowledgements",
    "section": "Images",
    "text": "Images\nImages are stored on Nextcloud (UHH Cloud). They can be retrieved using\n\n\n\nCode\n\nmake images\n\n\n\n\nClick here to view the full Makefile of this project.\n\n\n\n\nMakefile\n\nIMAGES_URL=https://cloud.uni-hamburg.de/s/xxswokojCCN49em/download\nIMAGES_ARCHIVE=quarto-book-images.zip\nIMAGES_DIR=images/\n\nall: render\n\n.PHONY: preview\npreview:\n    quarto preview\n\n.PHONY: render\nrender: clean images\n    quarto render\n\n.PHONY: pdf\npdf: clean images\n    quarto render --profile pdf\n    \n.PHONY: deploy\ndeploy: clean images\n    quarto publish gh-pages\n\n.PHONY: images\nimages:\n    wget $(IMAGES_URL) -O $(IMAGES_ARCHIVE)\n    unzip -j -o $(IMAGES_ARCHIVE) -d $(IMAGES_DIR)\n    rm -f $(IMAGES_ARCHIVE)\n\n.PHONY: clean\nclean:\n    rm -rf $(IMAGES_DIR)* _book/",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "acknowledgements.html#analytics",
    "href": "acknowledgements.html#analytics",
    "title": "Acknowledgements",
    "section": "Analytics",
    "text": "Analytics\nWe use Plausible for website analytics. Plausible is an “intuitive, lightweight and open source web analytics”, does not use cookies and is fully compliant with GDPR, CCPA and PECR.",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "acknowledgements.html#license",
    "href": "acknowledgements.html#license",
    "title": "Acknowledgements",
    "section": "License",
    "text": "License\nAll contents are licensed under a Creative Commons Attribution 4.0 International (CC BY 4.0) license, unless indicated otherwise.",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "acknowledgements.html#contact",
    "href": "acknowledgements.html#contact",
    "title": "Acknowledgements",
    "section": "Contact",
    "text": "Contact\nDid you spot an error? Is there an issue with the website? Do you have feedback, questions or comments? We would love to hear from you! Please open an issue on GitHub or send an email. Thank you!",
    "crumbs": [
      "Acknowledgements"
    ]
  }
]